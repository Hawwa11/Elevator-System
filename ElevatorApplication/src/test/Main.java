/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test;

import java.util.Random;
import javax.swing.JOptionPane;
import test.ElevatorBehaviour.*;
import java.util.concurrent.ThreadLocalRandom;
/**
 *
 * @author arifu
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
   
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(1167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
     static Elevator t1, t2,t3;
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         MutexClass mainM = new MutexClass();
         createUsers();
         ThreadEven MOne = new ThreadEven(mainM, t1) ;
         ThreadOdd MTwo = new ThreadOdd(mainM, t2) ;
         ThreadVip Mthree= new ThreadVip(mainM,t3);
         
         
         MOne.start();
         MTwo.start();
        Mthree.start();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                 new Main().setVisible(false);
            }
        });
//System.exit(0); //exits the system code if u uncomment Main then need to comment this as well.
    }
    
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables

    
    
  public static void createUsers ()
    {
       Random rand = new Random();
       
            double weight;
            int fGetOn;
            int fGetOff;
            int VipGetOn;
            int VipGetoff;
            User[] usersEven = new User[5];
            User[] usersOdd = new User[5];
            User[] usersVip= new User[5];
           
       StringBuilder sb1 = new StringBuilder();
       StringBuilder sb2 = new StringBuilder();
       StringBuilder sb3 = new StringBuilder();
    
   
       
        int min=1;
        int max=11;
        Random random= new Random();
        for(int i=0; i<5; i++)
        {
            weight = Math.round((Math.random()*800)*100.0)/100.0;
            fGetOn = 2 + rand.nextInt((11-2)/2) *2;
            fGetOff = 2 + rand.nextInt((11-2)/2) *2;
            usersEven[i] = new User(i, weight, fGetOn, fGetOff);
               //JOptionPane.showMessageDialog(null,"E1 - User " + i + " weight : " + weight);
                 sb1.append("User weights for Elevator one \n \n");
            sb1.append("E1 - User ").append(i).append(" weight : ").append(weight).append("\n");
            
   
                 weight = Math.round((Math.random()*800)*100.0)/100.0;
            fGetOn = rand.nextInt(10 / 2) * 2 + 1;
            fGetOff = rand.nextInt(10 / 2) * 2 + 1;
            usersOdd[i] = new User(i+5, weight, fGetOn, fGetOff);
         
                sb2.append("User weights for Elevator two \n \n");
               sb2.append("E2 - User ").append(usersOdd[i].userId).append(" weight : ").append(weight).append("\n");
               
               
             
            weight = Math.round((Math.random()*800)*100.0)/100.0;
            VipGetOn = random.nextInt(max-min)+min;
            VipGetoff = random.nextInt(max-min)+min;
            usersVip[i] = new User(i+10, weight, VipGetOn, VipGetoff);
         
                sb3.append("User weights for Elevator three \n \n");
               sb3.append("E3 - User ").append(usersVip[i].userId).append(" weight : ").append(weight).append("\n");
               
   
        }
        
          
           
         JOptionPane.showMessageDialog(null,sb1);
        t1 = new Elevator(usersEven, 1);
        System.out.println(" ");
        
    
           JOptionPane.showMessageDialog(null,sb2);
        t2 = new Elevator(usersOdd, 2);
        System.out.println(" ");   
        
        
         JOptionPane.showMessageDialog(null,sb3);
           t3 = new Elevator(usersVip, 3);
           System.out.println(" ");   
        
        
       
    }




}


